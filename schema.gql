# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Availability {
  id: ID!
  mentorId: String!
  weekDay: Int!
  startHour: String!
  period: String
  endHour: String!
  active: Boolean!
  startDate: String
  endDate: String
}

type NotificationData {
  id: ID!
  title: String!
  description: String!
  imageUrl: String
  notifierId: ID
  updatedAt: DateTime!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Notification {
  id: ID!
  notificationDataId: ID!
  userId: ID!
  read: Boolean!
  data: NotificationData!
}

type Language {
  name: String!
  proficiency: String!
}

type User {
  id: ID!
  email: String!
  password: String
  active: Boolean
  firstName: String!
  lastName: String
  photoUrl: String
  yearsOfExperience: Float
  isEmailVerified: Boolean!
  isTermsAccepted: Boolean!
  onBoardingCompleted: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  googleId: String
  facebookId: String
  birthDate: DateTime
  country: String
  state: String
  city: String
  skills: [String!]
  linkedin: String
  github: String
  website: String
  jobTitle: String
  jobCompany: String
  biography: String
  description: String
  isMentor: Boolean
  status: String
  language: [Language!]
  availability: [Availability!]
  notifications: [Notification!]
}

type Event {
  id: ID!
  mentorId: String!
  participants: [User!]!
  status: String!
  startDate: String!
  endDate: String!
  active: Boolean!
  meetLink: String!
}

type ParticipantInfo {
  user: User!
  assignedBy: String!
  assignedAt: DateTime!
}

type CreateEventOutput {
  id: ID!
  mentorId: String!
  participants: [ParticipantInfo!]!
  startDate: String!
  meetingLink: String!
  endDate: String!
  status: String!
  active: Boolean!
}

type Skill {
  id: ID!
  name: String!
}

type Testimony {
  id: ID!
  mentorId: String!
  learnerId: String!
  text: String!
}

type CreateTestimonyOutput {
  id: ID!
  mentorId: String!
  learnerId: String!
  text: String!
}

type Recommendation {
  id: ID!
  mentorId: String!
  learnerId: String!
  text: String!
  approved: Boolean!
}

type Query {
  sayHello: String!
  findMentors(findMentorsInput: FindMentorInput!): [User!]!
  findOneMentor(id: String!): User!
  findAllUsers(getUsersInput: getUsers!): [User!]!
  me: User!
  isUserLogged: Boolean!
  findMentorAvailability(mentorId: String!): User!
  findEvents(learnerId: String, mentorId: String): [CreateEventOutput!]!
  findOneEvent(id: String!): CreateEventOutput!
  findAllSkills: [Skill!]!
  skill(id: Int!): Skill!
  findNotifications(userId: String): [Notification!]!
  findOneNotification(id: String!): Notification
  findTestimonies(learnerId: String, mentorId: String): [CreateTestimonyOutput!]!
  findOneTestimony(id: String!): [CreateTestimonyOutput!]!
}

input FindMentorInput {
  firstName: String
  skills: [String!]
  period: String
  limit: Float
  orderBy: String
  order: String
  pageNumber: Float
  pageSize: Float
  skip: Float
  take: Float
}

input getUsers {
  firstName: String
  skills: [String!]
  period: String
  limit: Float
  orderBy: String
  order: String
  pageNumber: Float
  pageSize: Float
  skip: Float
  take: Float
  isMentor: Boolean
}

type Mutation {
  signUpUser(userInput: CreateUserInput!): Boolean!
  updateUser(userInput: UpdateUserDto!): User!
  changePassword(changePasswordInput: ChangePasswordInputDto!): Boolean!
  signInUser(userInput: SignInUserInput!): Boolean!
  deactivateAccount(id: String!): Boolean!
  signOutUser: Boolean!
  updateUserPhoto(file: Upload!, userId: String!): Boolean!
  resetUserPassword(userInput: ResetPasswordInput!): Boolean!
  sendResetPassword(email: String!): Boolean!
  createAvailability(createAvailabilityInput: CreateAvailabilityInput!): User!
  updateAvailability(updateAvailabilityInput: UpdateAvailabilityInput!): Availability!
  removeAvailability(id: Int!): Availability!
  createEvent(createEventInput: CreateEventInput!): Event!
  updateEvent(updateEventInput: UpdateEventInput!): Event!
  removeEvent(id: Int!): Event!
  createSkill(createSkillInput: CreateSkillInput!): Skill!
  updateSkill(updateSkillInput: UpdateSkillInput!): Skill!
  removeSkill(id: Int!): Skill!
  createNotification(createNotificationInput: CreateNotificationInput!): NotificationData!
  updateNotification(updateNotificationInput: UpdateNotificationInput!): NotificationData!
  markRead(id: String!): Notification!
  removeNotification(id: ID!): Boolean!
  createTestimony(createTestimonyInput: CreateTestimonyInput!): Testimony!
  updateTestimony(UpdateTestimonyInput: UpdateTestimonyInput!): Testimony!
  deleteTestimony(id: Int!): Testimony!
  createRecommendation(createRecommendationInput: CreateRecommendationInput!): Recommendation!
  updateApproved(updateApprovedInput: UpdateApprovedInput!): Recommendation!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  photoUrl: String
  yearsOfExperience: Float
  skills: [String!]!
  birthDate: DateTime
  country: String!
  state: String!
  city: String!
  linkedin: String
  github: String
  website: String
  jobTitle: String
  jobCompany: String
  biography: String
  description: String!
  isMentor: Boolean
  facebookId: String
  googleId: String
  status: String
  language: [CreateLanguageInput!]
}

input CreateLanguageInput {
  name: String!
  proficiency: String!
}

input UpdateUserDto {
  firstName: String
  lastName: String
  email: String
  password: String
  photoUrl: String
  yearsOfExperience: Float
  skills: [String!]
  birthDate: DateTime
  country: String
  state: String
  city: String
  linkedin: String
  github: String
  website: String
  jobTitle: String
  jobCompany: String
  biography: String
  description: String
  isMentor: Boolean
  facebookId: String
  googleId: String
  status: String
  language: [CreateLanguageInput!]
  id: String!
}

input ChangePasswordInputDto {
  userId: String!
  newPassword: String!
}

input SignInUserInput {
  email: String!
  password: String!
  rememberMe: Boolean
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input ResetPasswordInput {
  email: String!
  pin: String!
  newPassword: String!
}

input CreateAvailabilityInput {
  mentorId: ID!
  availabilities: [AvailabilityInput!]
}

input AvailabilityInput {
  weekDay: Int!
  startHour: String!
  endHour: String!
  active: Boolean!
  period: String
}

input UpdateAvailabilityInput {
  mentorId: ID
  availabilities: [AvailabilityInput!]
  id: Int!
}

input CreateEventInput {
  mentorId: String!
  learnerId: String!
  startDate: String!
  endDate: String!
  status: String!
  active: Boolean!
}

input UpdateEventInput {
  mentorId: String
  learnerId: String
  startDate: String
  endDate: String
  status: String
  active: Boolean
  id: String!
}

input CreateSkillInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSkillInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateNotificationInput {
  title: String!
  description: String!
  imageUrl: String
  notifierId: ID
  usersIds: [String!]!
}

input UpdateNotificationInput {
  title: String
  description: String
  imageUrl: String
  notifierId: ID
  usersIds: [String!]
  id: String!
}

input CreateTestimonyInput {
  mentorId: String!
  learnerId: String!
  text: String!
}

input UpdateTestimonyInput {
  mentorId: String
  learnerId: String
  text: String
  id: String!
}

input CreateRecommendationInput {
  mentorId: String!
  learnerId: String!
  text: String!
  approved: Boolean!
}

input UpdateApprovedInput {
  id: String!
  approved: Boolean!
}